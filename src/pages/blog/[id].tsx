import type { GetServerSideProps, NextPage } from 'next';
import Head from 'next/head';
import PageTitle from '../../components/PageTitle';
import RelatedBlogs from '../../components/RelatedBlogs';
import { BlogData } from '../../types';

interface BlogDetailProps {
  dataBlogDetail: BlogData | null;
  dataRelatedBlogs: BlogData[] | null;
}

const BlogDetail: NextPage<BlogDetailProps> = ({ dataBlogDetail, dataRelatedBlogs }) => {
  return dataBlogDetail && dataRelatedBlogs ? (
    <>
      <Head>
        <title>Store - title</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageTitle title={dataBlogDetail.title} />

      <section className="bg0 p-t-52 p-b-20">
        <div className="container">
          <div className="row">
            <div className="col-md-8 col-lg-9 p-b-80">
              <div className="p-r-45 p-r-0-lg">
                <div className="wrap-pic-w how-pos5-parent">
                  <img src={dataBlogDetail.img} alt={dataBlogDetail.title} />
                </div>

                <div className="p-t-32">
                  <span className="flex-w align-items-center flex-m stext-111 cl2 p-b-19">
                    <span className="flex-c-m mr-3 bor7 p-lr-15 trans-04">{dataBlogDetail.category}</span>

                    <span>
                      <span className="cl4">By</span> {dataBlogDetail.author}
                      <span className="cl12 m-l-4 m-r-6">|</span>
                    </span>

                    <span>{dataBlogDetail.date}</span>
                  </span>

                  <h4 className="ltext-109 cl2 p-b-28">{dataBlogDetail.title}</h4>

                  <p className="stext-117 cl6 p-b-26">{dataBlogDetail.first_content}</p>

                  <p className="stext-117 cl6 p-b-26">{dataBlogDetail.second_content}</p>
                </div>
              </div>
            </div>

            <div className="col-md-4 col-lg-3 p-b-80">
              <div className="side-menu">
                {dataRelatedBlogs.map((relatedBlog) => {
                  return <RelatedBlogs key={relatedBlog.id} relatedBlog={relatedBlog} />;
                })}
              </div>
            </div>
          </div>
        </div>
      </section>
    </>
  ) : (
    <div>
      <h4>Product not found.</h4>
    </div>
  );
};

export default BlogDetail;

export const getServerSideProps: GetServerSideProps = async ({ params }) => {
  const res = await fetch(`http://localhost:5001/blogs`);
  const data: BlogData[] = await res.json();
  const limit = 3;

  let randomNo;
  let validRangeFound = false;

  if (params) {
    while (!validRangeFound) {
      randomNo = Math.floor(Math.random() * (data.length - limit + 1));

      validRangeFound = randomNo + limit <= data.length;
    }

    const resBlogDetail = await fetch(`http://localhost:5001/blogs/${params.id}`);
    const dataBlogDetail: BlogData = await resBlogDetail.json();

    const resRelatedBlogs = await fetch(`http://localhost:5001/blogs?_start=${randomNo}&_limit=${limit}`);
    const dataRelatedBlogs: BlogData[] = await resRelatedBlogs.json();

    return {
      props: {
        dataBlogDetail,
        dataRelatedBlogs,
      },
    };
  }
  return {
    props: {
      dataBlogDetail: null,
      dataRelatedBlogs: null,
    },
  };
};
